<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--XML的配置方式完成aop的开发-->
    <!--配置目标类=======-->
    <bean id="customerDao" class="com.lucky.aspectJ.demo2.CustomerDaoImpl"/>
    <!--配置切面类=======-->
    <bean id="myAspectXml" class="com.lucky.aspectJ.demo2.MyAspectXml"/>
    <!--aop的相关配置-->
    <aop:config>
        <!--配置切入点：定义哪些类的哪些方法可以应用增强-->
        <aop:pointcut id="myPointCut1" expression="execution(* com.lucky.aspectJ.demo2.CustomerDaoImpl.save(..))"/>
        <aop:pointcut id="myPointCut2" expression="execution(* com.lucky.aspectJ.demo2.CustomerDaoImpl.update(..))"/>
        <aop:pointcut id="myPointCut3" expression="execution(* com.lucky.aspectJ.demo2.CustomerDaoImpl.delete(..))"/>
        <aop:pointcut id="myPointCut4" expression="execution(* com.lucky.aspectJ.demo2.CustomerDaoImpl.findAll(..))"/>
        <aop:pointcut id="myPointCut5" expression="execution(* com.lucky.aspectJ.demo2.CustomerDaoImpl.findOne(..))"/>
        <!--配置AOP的切面:这些类和方法应用哪种增强-->
        <aop:aspect ref="myAspectXml">
            <!--配置前置通知:method就是myAspectXml中定义的before方法（也可以不叫before）-->
            <aop:before method="before" pointcut-ref="myPointCut1" />
            <aop:after-returning method="afterReturing" pointcut-ref="myPointCut2" returning="result" />
            <aop:around method="around" pointcut-ref="myPointCut3" />
            <aop:after-throwing method="afterThrowing" pointcut-ref="myPointCut4" throwing="e"/>
            <aop:after method="after" pointcut-ref="myPointCut5" />
        </aop:aspect>
    </aop:config>
</beans>